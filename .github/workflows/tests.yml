name: rsnd
on:
  push:
    branches:
      - main
      - canary
  pull_request:
permissions: 
  contents: read
  pull-requests: read
jobs:
  build-and-test:
    name: build and test
    runs-on: buildjet-4vcpu-ubuntu-2204
    outputs:
      cache-hit: ${{ steps.pnpm-cache.outputs.cache-hit }}
    container:
      image: node:22
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: pnpm setup
        uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda
      - name: pnpm Cache
        id: pnpm-cache
        uses: buildjet/cache@3e70d19e31d6a8030aeddf6ed8dbe601f94d09f4
        with:
          path: |
            ~/.pnpm-store
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-
      - name: Install packages
        if: steps.pnpm-cache.outputs.cache-hit != 'true'
        run: pnpm install --frozen-lockfile
      - name: turborepo Cache
        uses: rharkor/caching-for-turbo@a1c4079258ae08389be75b57d4d7a70f23c1c66d
        with:
          cache-prefix: ${{ runner.os }}-turbo-
          provider: github
      - name: Run Build
        run: pnpm build
        # We include the environment variables here so that the cache for turborepo
        # is not invalidated and builds are re-ran
        env:
          SPAM_ASSASSIN_HOST: ${{ secrets.SPAM_ASSASSIN_HOST }}
          SPAM_ASSASSIN_PORT: ${{ secrets.SPAM_ASSASSIN_PORT }}
      - name: Run Tests
        run: pnpm test
        env:
          SPAM_ASSASSIN_HOST: ${{ secrets.SPAM_ASSASSIN_HOST }}
          SPAM_ASSASSIN_PORT: ${{ secrets.SPAM_ASSASSIN_PORT }}
  dependencies:
    runs-on: buildjet-4vcpu-ubuntu-2204
    container:
      image: node:22
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Check for pinned dependencies
        run: npx tsx ./scripts/check-dependency-versions.ts
